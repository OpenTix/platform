name: Manual Deploy

on:
    workflow_dispatch:
        inputs:
            environment:
                description: 'Environment to deploy to'
                required: true
                type: choice
                options:
                    - prod
                    - dev
                default: 'dev'

env:
    AWS_DEFAULT_REGION: us-east-1

permissions:
    id-token: write
    contents: read

jobs:
    deploy:
        name: Deploy
        runs-on: self-hosted
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'npm'

            - run: npm ci --legacy-peer-deps

            - run: npx nx reset
            - run: npx nx report
            - name: Build
              run: NX_PUBLIC_APP_BUILD=$(node scripts/CreateBuildIdent.js) npx nx run-many -t build --no-cloud

            - name: configure aws credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::741448950585:role/GithubAction-AssumeRoleWithAction
                  role-session-name: GitHub_to_AWS_via_FederatedOIDC
                  aws-region: 'us-east-1'

            - name: assume prod executor role credentials
              uses: aws-actions/configure-aws-credentials@v4
              if: ${{ github.event.inputs.environment == 'prod' }}
              with:
                  aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
                  aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
                  role-to-assume: arn:aws:iam::222634384294:role/GithubAction-AssumeProdAccountRole
                  role-session-name: GitHub_to_AWS_via_FederatedOIDC
                  role-duration-seconds: 3600
                  role-skip-session-tagging: true
                  aws-region: 'us-east-1'

            - name: assume dev executor role credentials
              uses: aws-actions/configure-aws-credentials@v4
              if: ${{ github.event.inputs.environment == 'dev' }}
              with:
                  aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
                  aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
                  role-to-assume: arn:aws:iam::390403894969:role/GithubAction-AssumeDevAccountRole
                  role-session-name: GitHub_to_AWS_via_FederatedOIDC
                  role-duration-seconds: 3600
                  role-skip-session-tagging: true
                  aws-region: 'us-east-1'

            - run: npm ci --legacy-peer-deps
              working-directory: ./infra

            - name: synth prod
              if: ${{ github.event.inputs.environment == 'prod' }}
              working-directory: ./infra
              run: DEPLOYENV=prod HOSTEDZONENAME=aws.opentix.co npx cdk synth --account 222634384294 --region us-east-1 --require-approval never

            - name: synth dev
              if: ${{ github.event.inputs.environment == 'dev' }}
              working-directory: ./infra
              run: DEPLOYENV=dev HOSTEDZONENAME=dev.opentix.co npx cdk synth --account 390403894969 --region us-east-1 --require-approval never

            - name: deploy prod
              if: ${{ github.event.inputs.environment == 'prod' }}
              working-directory: ./infra
              run: DEPLOYENV=prod HOSTEDZONENAME=aws.opentix.co npx cdk deploy --all --account 222634384294 --region us-east-1 --require-approval never

            - name: deploy dev
              if: ${{ github.event.inputs.environment == 'dev' }}
              working-directory: ./infra
              run: DEPLOYENV=dev HOSTEDZONENAME=dev.opentix.co npx cdk deploy --all --account 390403894969 --region us-east-1 --require-approval never
